name: Setup and build networks; VGG16, Resnet50
description: Build and run VGG16 and Resnet50 with oneAPI base toolkit and oneAPI-Construction-Kit

inputs:
  workspace:
    description: 'Main workflow workspace'
    default: ${{ github.workspace }}

runs:
  # We don't want a new docker just a list of steps, so mark as composite
  using: "composite"
  steps:
    - name: setup python
      uses: actions/setup-python@v5
      with:
        python-version: '3.8'

    - name: Install Python libraries and system dependencies
      shell: bash
      run: |
        pip install --user requests numpy h5py Pillow
        sudo add-apt-repository universe
        sudo apt-get update
        sudo apt-get install -y libblas-dev libopenblas64-dev libopenblas-dev libpthread-stubs0-dev libboost-all-dev

    - name: Clone portDNN
      shell: bash
      run: git clone --recursive --depth 1 --single-branch https://github.com/codeplaysoftware/portDNN.git

    - name: Get Intel OneAPI Nightly Release
      shell: bash
      run: |
        wget "https://github.com/intel/llvm/releases/download/nightly-2024-03-04/sycl_linux.tar.gz"
        mkdir linux_nightly_release
        tar -xzf sycl_linux.tar.gz -C linux_nightly_release

    - name: Download Image for testing
      shell: bash
      run: |
        wget https://upload.wikimedia.org/wikipedia/commons/8/8d/Labrador_Retriever_Molly.jpg

    - name: Set up environment and build networks
      shell: bash
      run: |
        export LD_LIBRARY_PATH=${{ inputs.workspace }}/ock_install_dir/lib:$(pwd)/linux_nightly_release/lib/libsycl.so:$(pwd)/linux_nightly_release/lib:$LD_LIBRARY_PATH
        export CMAKE_CXX_COMPILER=$(pwd)/linux_nightly_release/bin/clang++
        export CMAKE_C_COMPILER=$(pwd)/linux_nightly_release/bin/clang
        export CA_HAL_DEBUG=1
        export CA_PROFILE_LEVEL=3
        export ONEAPI_DEVICE_SELECTOR=opencl:fpga
        export OCL_ICD_FILENAMES=${{ inputs.workspace }}/ock_install_dir/lib/libCL.so
        # As the oneAPI basetoolkit release has a whitelist of devices, it filters out RefSi.
        # To override it, as a temporary solution we can point SYCL_CONFIG_FILE_NAME to ``.
        # This way it doesn't set the default sycl.conf.
        export SYCL_CONFIG_FILE_NAME=""
        export portDNN_source=$(pwd)/portDNN
        export OCL_ICD_VENDORS=/dev/null
        export CXX=icpx
        export CC=icpx

        # VGG16
        mkdir vdata
        cd vdata
        wget --no-verbose https://storage.googleapis.com/tensorflow/keras-applications/vgg16/vgg16_weights_tf_dim_ordering_tf_kernels.h5
        python $portDNN_source/samples/networks/vgg/h5toBin.py vgg16_weights_tf_dim_ordering_tf_kernels.h5
        cd ..
        mkdir vgg_data && cp -r vdata/* vgg_data/

        # Resnet50
        mkdir rdata
        cd rdata
        wget --no-verbose https://storage.googleapis.com/tensorflow/keras-applications/resnet/resnet50_weights_tf_dim_ordering_tf_kernels.h5
        python $portDNN_source/samples/networks/resnet50/h5toBin.py resnet50_weights_tf_dim_ordering_tf_kernels.h5
        cd ..
        mkdir resnet_data && cp -r rdata/* resnet_data/

        # Preparing an image
        python $portDNN_source/samples/networks/img2bin.py $(pwd)/Labrador_Retriever_Molly.jpg

        # Testing on image for VGG16
        CA_HAL_DEBUG=1 CA_PROFILE_LEVEL=3 OCL_ICD_FILENAMES=${OCL_ICD_FILENAMES} ONEAPI_DEVICE_SELECTOR=opencl:fpga SYCL_CONFIG_FILE_NAME=  ${{ inputs.workspace }}/portDNN_build_dir/samples/networks/vgg/vgg vdata/ $(pwd)/Labrador_Retriever_Molly.jpg.bin
        # Testing on image for Resnet50
        CA_HAL_DEBUG=1 CA_PROFILE_LEVEL=3 OCL_ICD_FILENAMES=${OCL_ICD_FILENAMES} ONEAPI_DEVICE_SELECTOR=opencl:fpga SYCL_CONFIG_FILE_NAME=  ${{ inputs.workspace }}/portDNN_build_dir/samples/networks/resnet50/resnet50 rdata/ $(pwd)/Labrador_Retriever_Molly.jpg.bin

    - name: Package artifacts
      shell: bash
      run: |
        tar -cvzf network_artifacts.tar.gz vgg_data resnet_data Labrador_Retriever_Molly.jpg Labrador_Retriever_Molly.jpg.bin

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: network_build
        path: network_artifacts.tar.gz
